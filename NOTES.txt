# NOTES #############################################################################

# print("Your possible moves are...") 
# print(possible_moves)
        
# So cool, this gives all possible left <> right moves any piece can move Horizontally
# Next, we need to print out all possible up / down moves a rook can make Vertically
# Create the following functions; Different players will use different combos
# of the below functions and add lists returned by the functions to a new list called "possible_moves".
# Once possible_moves is populated, we can redraw the Chess board and add "*" characters to each
# possible move, and we can also return the algebraic labels to the user for each possible move.
# The only real "check" we need to add is to ensure the user provided a board location/coordinate 
# that's not outside the range of the board.
# get_horizontal_moves
# get_vertical_moves
# get_diagonal_moves
# get_l_moves

# Queen - can move any number of vacant squares diagonally, horizontally, or vertically.
# Knight - moves to a square that is two squares away horizontally and one square vertically, 
# or two squares vertically and one square horizontally

# Rook - can move any number of vacant squares vertically or horizontally. ..
    # Given row_position - print the possible out list index positions to left or right
        # of the current index ..  
    # Given col position - 
# To start, just print current position in the row (outer list)..
# board[row_position][col_position] = input_piece
# Just print out all item locations on current row except for 0 (that's a heading) and the current
# position, since it's already taken..
# print("Row Position: " + str(row_position))
# print("Col Position: " + str(col_position))
# print()